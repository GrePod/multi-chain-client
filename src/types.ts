////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// Generic RPC interfaces //////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import { AlgoMccCreate, MCC, UtxoMccCreate, XrpMccCreate } from ".";

export {
   RPCInterface,
   ReadRpcInterface,
   WriteRpcInterface,
   TransactionSuccessStatus,
   getTransactionOptions,
   ChainType,
   IIGetBlockRes,
   IIGetTransactionRes,
} from "./types/genericMccTypes";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// Ripple XRP interfaces ///////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export * from "./types/xrpTypes";

// export {
//     TxResponse as IXrpGetTransactionRes,
//     TxResponse as IXrpGetFullTransactionRes,
//     LedgerResponse as IXrpGetBlockRes
//  } from "xrpl";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// UTXO base interfaces ////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export {
   UtxoMccCreate,
   UtxoRpcInterface,
   IIUtxoVin,
   IIUtxoVout,
   IUtxoScriptPubKey,
   UtxoVout,
   IUtxoScriptSig,
   IUtxoWalletRes,
   getAddressByLabelResponse,
   IUtxoTransactionListRes,
   IUtxoGetBlockHeaderRes,
   IUtxoGetBlockRes,
   IUtxoVinTransaction,
   IUtxoVoutTransaction,
   IUtxoGetTransactionRes,
} from "./types/utxoTypes";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// Doge interfaces /////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export * from "./types/dogeTypes";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// ALGO interfaces /////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export {
   AlgoMccCreate,
   IAlgoStatusRes,
   IAlgoBlockHeaderData,
   IAlgoBlockData,
   IAlgoGetBlockHeaderRes,
   IAlgoGetBlockRes,
   IAlgoSignature,
   IAlgoPaymentTransaction,
   IAlgoTransaction,
   IAlgoLitsTransaction,
   IAlgoGetTransactionRes,
   IAlgoListTransactionRes,
   IAlgoGetFullTransactionRes,
} from "./types/algoTypes";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// Attestor client interfaces //////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// export { AdditionalTransactionDetails, IAdditionalTxRequestOptions } from "./types/attestationTypes";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// Rate Limier for Axios ///////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export * from "./types/axiosRateLimitTypes";

export type MccCreate = XrpMccCreate | AlgoMccCreate | UtxoMccCreate;
export type MccClient = MCC.XRP | MCC.ALGO | MCC.DOGE | MCC.LTC | MCC.BTC;
export type MccUtxoClient = MCC.BTC | MCC.DOGE | MCC.LTC;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// ALGO interfaces /////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export { optional, getOptionalKeys } from "./utils/typeReflection";
